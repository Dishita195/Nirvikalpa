---
const { btnimg, title, image } = Astro.props;
---

<div class="wrapper">
  <!-- Clickable Card/Button -->
  <div class="bug-card">
    <img src={btnimg} class="btn-img" alt="button" />
  </div>

  <!-- Popup -->
  <div class="popup-overlay hidden">
    <div class="popup-card">
      <!-- Close Button -->
      <span class="popup-close" style="font-size: medium;">close</span>

      <!-- Content Row -->
      <div class="popup-content-row">
        <!-- Text Area -->
        <div class="popup-text">
          <div class="slot-wrapper">
          <slot>
            <!-- fallback content if no slot passed -->
            <p>{title}</p>
          </slot>
          </div>
        </div>
        <!-- Bug Image -->
        <div class="popup-bug-img">
          <img src={image} alt="Bug" />
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Client-Side Script -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".wrapper").forEach((wrapper) => {
      const card = wrapper.querySelector(".bug-card");
      const popup = wrapper.querySelector(".popup-overlay");
      const closeBtn = wrapper.querySelector(".popup-close");
      const popupContent = wrapper.querySelector(".popup-card");

      if (card && popup && closeBtn && popupContent) {
        card.addEventListener("click", () => popup.classList.remove("hidden"));
        popup.addEventListener("click", () => popup.classList.add("hidden"));
        closeBtn.addEventListener("click", (e) => {
          e.stopPropagation();
          popup.classList.add("hidden");
        });
        popupContent.addEventListener("click", (e) => e.stopPropagation());
      }
    });
  });
</script>

<style>
  .slot-wrapper {
    margin-top: 20px;
    margin-left: 30px;

  }
  /* Button image */
  .btn-img {
    width: 30px;
    height: auto;
    cursor: pointer;
    transition: transform 0.2s ease;
  }
  .btn-img:hover {
    transform: scale(1.5);
  }

  /* Wrapper */
  .wrapper {
    display: inline-block;
    /* width: 300px; */
  }

  .bug-card {
    padding: 18px;
    cursor: pointer;
  }

  /* Overlay background */
  .popup-overlay {
    position: fixed;
    inset: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
  }
  .popup-overlay.hidden {
    display: none;
  }

  /* Popup card */
  .popup-card {
    background-image: url(/images-optimized/card.webp);
    background-size: cover;
    position: relative;
    overflow: hidden;
    width: 570px;
    height: 420px;
  }

  /* Background */
  .popup-bg {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 1;
  }

  /* Close button */
  .popup-close {
    position: absolute;
    top: 24px;
    right: 24px;
    font-size: 1.6rem;
    z-index: 6;
    cursor: pointer;
    color: #8057bd;
    background: none;
    border: none;
  }
  .popup-close:hover {
    opacity: 0.8;
  }

  /* Content row */
  .popup-content-row {
    position: relative;
    display: flex;
    flex-direction: row;
    align-items:flex-start;
    /* gap: 3rem; */
    z-index: 5;
    padding: 48px 38px 0 38px;
    height: 100%;
    box-sizing: border-box;
  }

  /* Text */
  .popup-text p {
    font-family: "DellaRespira", serif;
    color: #8057bd;
    font-size: 1.2rem;
    line-height: 1.3;
    margin: 0;
    max-width: 400px;
    margin-top: 80px;
    margin-left: 20px;

  }

  /* Bug image */
  .popup-bug-img img {
    width: 280px;
    height: auto;
    object-fit: contain;
    display: block;
    background: transparent;
    margin-top: -40px;
    margin-right: -30px;
  }
</style>
